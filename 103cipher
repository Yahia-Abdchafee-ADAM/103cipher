#!/usr/bin/env python3
import sys
import math
import encrypting
from encrypting import *
import decrypting

def usage():
    print("USAGE")
    print("    ./103cipher message key flag")
    print("")
    print("    DESCRIPTION")
    print("    message   a message, made of ASCII characters")
    print("    key       the encryption key, made of ASCII characters")
    print("    flag      0 for the message to be encrypted, 1 to be decrypted")


def error_handling():
    if sys.argv[3] != "1" and sys.argv[3] != "0":
        sys.exit(84)
    if sys.argv[3] == "1":
        for m in range(len(sys.argv[1])):
            if sys.argv[1][m] != ' ' and str.isnumeric(sys.argv[1][m]) == False:
                sys.exit(84)
    if sys.argv[3] == "0":
        for r in range(len(sys.argv[1])):
            if str.isalpha(sys.argv[1][r]) == False and sys.argv[1][r] != ' ' and sys.argv[1][r] != '\'' and sys.argv[1][r] != '.' and sys.argv[1][r] != ',':
                sys.exit(84)
    for z in range(len(sys.argv[2])):
        if str.isalpha(sys.argv[2][z]) == False and sys.argv[2][z] != ' ' and sys.argv[2][z] != '\'' and sys.argv[2][z] != '.' and sys.argv[2][z] != ',':
            sys.exit(84)
    return 0

def cipher():
    if (len(sys.argv)) == 2:
        if sys.argv[1] == "-h":
            usage()
            return 0
    if (len(sys.argv)) != 4:
        sys.exit(84)
    if error_handling() == 84:
        sys.exit(84)
    if sys.argv[3] == '0':
        encrypting.matrix_product(encrypting.matrix_key(), encrypting.matrix_str())
    if sys.argv[3] == '1':
        decrypting.matrix_quotient(decrypting.matrix_inverse(), decrypting.matrix_decrypt_str())
    sys.exit(0)

cipher()
